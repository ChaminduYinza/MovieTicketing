<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://ws.apache.org/ns/synapse">
   <registry provider="org.wso2.carbon.mediation.registry.WSO2Registry">
      <parameter name="cachableDuration">10000</parameter>
   </registry>
   <taskManager provider="org.wso2.carbon.mediation.ntask.NTaskTaskManager" />
   <endpoint name="creditSampath">
      <http method="POST" uri-template="http://192.168.8.101:9771/sampath-payment-gateway/CreditSampath" />
   </endpoint>
   <endpoint name="DialogEzCash">
      <http method="POST" uri-template="http://192.168.8.101:9771/dialog-payment-gateway/DialogEzCash" />
   </endpoint>
      <endpoint name="AuthenticationAPI">
      <http method="POST" uri-template="http://192.168.8.101:9771/api/AuthenticationAPI" />
   </endpoint>
   <endpoint name="movieReservation">
      <http method="POST" uri-template="http://192.168.8.101:9771/movie/movieReservation" />
   </endpoint>
   <sequence name="faultSequence">
      <log level="custom">
         <property name="FaultMessage" value="Fault Sequence Executed" />
         <property xmlns:ns="http://org.apache.synapse/xsd" expression="get-property('ERROR_MESSAGE')" name="ERROR_MESSAGE" />
      </log>
      <payloadFactory description="" media-type="json">
         <format>{
"Status":"Error Occurred While Processing the Request",
"Message":"$1"
}</format>
         <args>
            <arg evaluator="xml" expression="get-property('ERROR_MESSAGE')" />
         </args>
      </payloadFactory>
      <respond />
   </sequence>
   <sequence name="APIInSequence">
      <log level="full">
         <property name="StartFlow" value="Starting the Flow" />
      </log>
      <property expression="json-eval($.reserveRequest.cardNo)" name="card_num" scope="default" type="STRING" />
      <payloadFactory media-type="json">
         <format>{
"movieReservation":{
"customerName": "$1",
"movieName":"$2",
"movieTime": "$3",
"seatNumbers": "$4",
"snackOrder":"$5",
}
}</format>
         <args>
            <arg evaluator="json" expression="$.reserveRequest.movieReservation.customerName" />
            <arg evaluator="json" expression="$.reserveRequest.movieReservation.movieName" />
            <arg evaluator="json" expression="$.reserveRequest.movieReservation.movieTime" />
            <arg evaluator="json" expression="$.reserveRequest.movieReservation.seatNumbers" />
            <arg evaluator="json" expression="$.reserveRequest.movieReservation.snackOrder" />
         </args>
      </payloadFactory>
      <property name="messageType" scope="axis2" type="STRING" value="application/json" />
      <property name="ContentType" scope="axis2" type="STRING" value="application/json" />
      <log level="full" />
      <call>
         <endpoint key="reserverMovie" />
      </call>
      <filter regex="^[A-Za-z].*" source="json-eval($.status)">
         <then>
            <respond />
         </then>
         <else />
      </filter>
      <log level="full" />
      <property expression="json-eval($.reservationID)" name="uri.var.reservation_id" scope="default" type="STRING" />
      <property expression="json-eval($.movie)" name="movieOBJ" scope="default" type="STRING" />
      <property expression="json-eval($.payment)" name="paymentOBJ" scope="default" type="STRING" />
      <log level="full" />
      <payloadFactory media-type="json">
         <format>{
"cardNumber":$1,
"customerName":$2,
"cSV":$3,
"amount":$4
}</format>
         <args>
            <arg evaluator="xml" expression="$ctx:uri.var.reservationID" />
            <arg evaluator="xml" expression="$ctx:cardNumber" />
            <arg evaluator="xml" expression="$ctx:customerName" />
            <arg evaluator="xml" expression="$ctx:cSV" />
            <arg evaluator="xml" expression="$ctx:amount" />
         </args>
      </payloadFactory>
      <log level="full" />
      <property name="messageType" scope="axis2" type="STRING" value="application/json" />
      <call>
         <endpoint key="settlePayment" />
      </call>
      <log level="full">
         <property name="EndOfFlow" value="Final Response Received from Backend " />
      </log>
      <payloadFactory media-type="json">
         <format>{
"mobileNumber":$1,
"pinNumber":$2,
"amount":$3
}</format>
         <args>
            <arg evaluator="xml" expression="$ctx:uri.var.mobileNumber" />
            <arg evaluator="xml" expression="$ctx:pinNumber" />
            <arg evaluator="json" expression="$ctx.amount" />
         </args>
      </payloadFactory>
      <log level="full" />
      <respond />
   </sequence>
   <sequence name="fault">
      <!-- Log the message at the full log level with the ERROR_MESSAGE and the ERROR_CODE-->
      <log level="full">
         <property name="MESSAGE" value="Executing default 'fault' sequence" />
         <property expression="get-property('ERROR_CODE')" name="ERROR_CODE" />
         <property expression="get-property('ERROR_MESSAGE')" name="ERROR_MESSAGE" />
      </log>
      <!-- Drops the messages by default if there is a fault -->
      <drop />
   </sequence>
   <sequence name="main">
      <in>
         <!-- Log all messages passing through -->
         <log level="full" />
         <!-- ensure that the default configuration only sends if it is one of samples -->
         <!-- Otherwise Synapse would be an open proxy by default (BAD!)               -->
         <filter regex="http://localhost:8080.*" source="get-property('To')">
            <!-- Send the messages where they have been sent (i.e. implicit "To" EPR) -->
            <send />
         </filter>
      </in>
      <out>
         <send />
      </out>
      <description>The main sequence for the message mediation</description>
   </sequence>
   <api context="/authentication" name="AuthenticationAPI">
      <resource methods="OPTIONS" uri-template="/*">
         <inSequence>
            <property name="Access-Control-Allow-Origin" scope="transport" type="STRING" value="*" />
            <property name="Access-Control-Allow-Methods" scope="transport" type="STRING" value="GET,PUT,POST,DELETE,PATCH,OPTIONS" />
            <property name="Access-Control-Allow-Headers" scope="transport" type="STRING" value="Authorization,Access-Control-Allow-Origin,Content-Type" />
            <respond />
         </inSequence>
         <outSequence />
         <faultSequence />
      </resource>
      <resource methods="POST" uri-template="/authenticate">
         <inSequence>
            <send>
               <endpoint key="AuthenticationEP" />
            </send>
         </inSequence>
         <outSequence>
            <send />
         </outSequence>
         <faultSequence />
      </resource>
   </api>
   <api context="/theatre" name="movieReservation">
      <resource methods="OPTIONS" uri-template="/*">
         <inSequence>
            <property name="Access-Control-Allow-Origin" scope="transport" type="STRING" value="*" />
            <property name="Access-Control-Allow-Methods" scope="transport" type="STRING" value="GET,PUT,POST,DELETE,PATCH,OPTIONS" />
            <property name="Access-Control-Allow-Headers" scope="transport" type="STRING" value="Authorization,Access-Control-Allow-Origin,Content-Type" />
            <respond />
         </inSequence>
         <outSequence />
         <faultSequence />
      </resource>
      <resource methods="POST" uri-template="/theatres">
         <inSequence>
            <send>
               <endpoint key="TheatreEP" />
            </send>
         </inSequence>
         <outSequence>
            <send />
         </outSequence>
         <faultSequence />
      </resource>
   </api>
   <api context="/sampathpayment" name="creditSampath">
      <resource methods="POST" protocol="http" uri-template="/credit_accounts">
         <inSequence>
            <log description="RequestLog" level="custom">
               <property name="message" value="&amp;quot;Request to Sampath Payment Gateway&amp;quot;" />
            </log>
            <send>
               <endpoint key="creditAccountsEP" />
            </send>
         </inSequence>
         <outSequence>
            <send />
         </outSequence>
         <faultSequence />
      </resource>
   </api>
   <api context="/sampathpayment" name="DialogEzCash">
      <resource methods="POST" protocol="http" uri-template="/credit_accounts">
         <inSequence>
            <log description="RequestLog" level="custom">
               <property name="message" value="&amp;quot;Request to Dialog ez cash Gateway&amp;quot;" />
            </log>
            <send>
               <endpoint key="creditAccountsEP" />
            </send>
         </inSequence>
         <outSequence>
            <send />
         </outSequence>
         <faultSequence />
      </resource>
   </api>
</definitions>